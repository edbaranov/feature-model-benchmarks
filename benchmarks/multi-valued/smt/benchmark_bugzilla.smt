;; benchmark_bugzilla=2 V0=2 V1=2 V2=2 V3=2 V5=2 V6=2 V7=2 V8=2 V9=2 V10=2 V11=2 V12=2 V13=2 V14=2 V15=2 V16=2 V17=2 V18=2 V19=2 V21=2 V22=2 V23=2 V24=2 V25=2 V26=2 V27=2 V29=2 V30=2 V31=2 V32=2 V33=2 V34=2 V35=2 V36=2 V37=2 V38=2 V39=2 V40=2 V41=2 V42=2 V43=2 V44=2 V45=2 V46=2 V47=2 V48=2 V49=2 V50=2 V51=2 MV4=3 MV20=4 MV28=4
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_bugzilla () Bool)
(declare-fun V0 () Bool)
(declare-fun V1 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V5 () Bool)
(declare-fun V6 () Bool)
(declare-fun V7 () Bool)
(declare-fun V8 () Bool)
(declare-fun V9 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V12 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V15 () Bool)
(declare-fun V16 () Bool)
(declare-fun V17 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V21 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V26 () Bool)
(declare-fun V27 () Bool)
(declare-fun V29 () Bool)
(declare-fun V30 () Bool)
(declare-fun V31 () Bool)
(declare-fun V32 () Bool)
(declare-fun V33 () Bool)
(declare-fun V34 () Bool)
(declare-fun V35 () Bool)
(declare-fun V36 () Bool)
(declare-fun V37 () Bool)
(declare-fun V38 () Bool)
(declare-fun V39 () Bool)
(declare-fun V40 () Bool)
(declare-fun V41 () Bool)
(declare-fun V42 () Bool)
(declare-fun V43 () Bool)
(declare-fun V44 () Bool)
(declare-fun V45 () Bool)
(declare-fun V46 () Bool)
(declare-fun V47 () Bool)
(declare-fun V48 () Bool)
(declare-fun V49 () Bool)
(declare-fun V50 () Bool)
(declare-fun V51 () Bool)
(declare-fun MV4 () (_ BitVec 2))
(assert (and (bvuge MV4 (_ bv0 2)) (bvult MV4 (_ bv3 2))))
(declare-fun MV4_0 () (_ Bool))
(declare-fun MV4_1 () (_ Bool))
(declare-fun MV20 () (_ BitVec 2))
(declare-fun MV20_0 () (_ Bool))
(declare-fun MV20_1 () (_ Bool))
(declare-fun MV28 () (_ BitVec 2))
(declare-fun MV28_0 () (_ Bool))
(declare-fun MV28_1 () (_ Bool))
(assert benchmark_bugzilla)
(assert (or V43 (not V44)))
(assert (or V45 V51))
(assert (or (not V15) V46))
(assert (or (not V47) (not V48)))
(assert (or V5 (or (not V49) (not V50))))
(assert (= MV4_0 (= (bvand MV4 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV4_1 (= (bvand MV4 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV20_0 (= (bvand MV20 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV20_1 (= (bvand MV20 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV28_0 (= (bvand MV28 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV28_1 (= (bvand MV28 (_ bv2 2)  ) (_ bv2 2))))

;; HSMGP=2 CGS=2 CGS_RED_AMG=2 CGS_IP_CG=2 CGS_IP_AMG=2 Smoother=2 Smoother_CGS=2 Smoother_GSAC=2 Smoother_GSACBE=2 Smoother_GSRB=2 Smoother_GSRBAC=2 Smoother_JAC=2 pre=7 post=7 numCore=4
;; 
;; numCore=[0:64,1:256,2:1024,3:4096]
(set-logic QF_BV)
(declare-fun HSMGP () Bool)
(declare-fun CGS () Bool)
(declare-fun CGS_RED_AMG () Bool)
(declare-fun CGS_IP_CG () Bool)
(declare-fun CGS_IP_AMG () Bool)
(declare-fun Smoother () Bool)
(declare-fun Smoother_CGS () Bool)
(declare-fun Smoother_GSAC () Bool)
(declare-fun Smoother_GSACBE () Bool)
(declare-fun Smoother_GSRB () Bool)
(declare-fun Smoother_GSRBAC () Bool)
(declare-fun Smoother_JAC () Bool)
(declare-fun pre () (_ BitVec 3))
(assert (and (bvuge pre (_ bv0 3)) (bvult pre (_ bv7 3))))
(declare-fun pre_0 () (_ Bool))
(declare-fun pre_1 () (_ Bool))
(declare-fun pre_2 () (_ Bool))
(declare-fun post () (_ BitVec 3))
(assert (and (bvuge post (_ bv0 3)) (bvult post (_ bv7 3))))
(declare-fun post_0 () (_ Bool))
(declare-fun post_1 () (_ Bool))
(declare-fun post_2 () (_ Bool))
(declare-fun numCore () (_ BitVec 2))
(declare-fun numCore_0 () (_ Bool))
(declare-fun numCore_1 () (_ Bool))
(assert (= CGS (or CGS_RED_AMG (or CGS_IP_CG CGS_IP_AMG))))
(assert (or (not CGS_RED_AMG) (not CGS_IP_CG)))
(assert (or (not CGS_RED_AMG) (not CGS_IP_AMG)))
(assert (or (not CGS_IP_CG) (not CGS_IP_AMG)))
(assert (= Smoother (or Smoother_CGS (or Smoother_GSAC (or Smoother_GSACBE (or Smoother_GSRB (or Smoother_GSRBAC Smoother_JAC)))))))
(assert (or (not Smoother_CGS) (not Smoother_GSAC)))
(assert (or (not Smoother_CGS) (not Smoother_GSACBE)))
(assert (or (not Smoother_CGS) (not Smoother_GSRB)))
(assert (or (not Smoother_CGS) (not Smoother_GSRBAC)))
(assert (or (not Smoother_CGS) (not Smoother_JAC)))
(assert (or (not Smoother_GSAC) (not Smoother_GSACBE)))
(assert (or (not Smoother_GSAC) (not Smoother_GSRB)))
(assert (or (not Smoother_GSAC) (not Smoother_GSRBAC)))
(assert (or (not Smoother_GSAC) (not Smoother_JAC)))
(assert (or (not Smoother_GSACBE) (not Smoother_GSRB)))
(assert (or (not Smoother_GSACBE) (not Smoother_GSRBAC)))
(assert (or (not Smoother_GSACBE) (not Smoother_JAC)))
(assert (or (not Smoother_GSRB) (not Smoother_GSRBAC)))
(assert (or (not Smoother_GSRB) (not Smoother_JAC)))
(assert (or (not Smoother_GSRBAC) (not Smoother_JAC)))
(assert (bvugt (bvadd pre post) (_ bv0 3 )))
(assert HSMGP)
(assert (= pre_0 (= (bvand pre (_ bv1 3)  ) (_ bv1 3))))
(assert (= pre_1 (= (bvand pre (_ bv2 3)  ) (_ bv2 3))))
(assert (= pre_2 (= (bvand pre (_ bv4 3)  ) (_ bv4 3))))
(assert (= post_0 (= (bvand post (_ bv1 3)  ) (_ bv1 3))))
(assert (= post_1 (= (bvand post (_ bv2 3)  ) (_ bv2 3))))
(assert (= post_2 (= (bvand post (_ bv4 3)  ) (_ bv4 3))))
(assert (= numCore_0 (= (bvand numCore (_ bv1 2)  ) (_ bv1 2))))
(assert (= numCore_1 (= (bvand numCore (_ bv2 2)  ) (_ bv2 2))))

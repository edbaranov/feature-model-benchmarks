;; benchmark_spinv=2 V0=2 V1=2 V2=2 V3=2 V4=2 V5=2 V6=2 V7=2 V8=2 V9=2 V10=2 V11=2 V12=2 V13=2 V14=2 V15=2 V16=2 V17=2 V18=2 V19=2 V20=2 V21=2 V22=2 V23=2 V24=2 V25=2 V26=2 V27=2 V28=2 V29=2 V30=2 V31=2 V32=2 V33=2 V34=2 V35=2 V36=2 V37=2 V38=2 V39=2 V40=2 V41=2 MV42=3 MV43=3 MV44=4 MV45=4 MV46=4 MV47=4 MV48=4 MV49=4 MV50=4 MV51=4 MV52=4 MV53=4 MV54=4
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_spinv () Bool)
(declare-fun V0 () Bool)
(declare-fun V1 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V4 () Bool)
(declare-fun V5 () Bool)
(declare-fun V6 () Bool)
(declare-fun V7 () Bool)
(declare-fun V8 () Bool)
(declare-fun V9 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V12 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V15 () Bool)
(declare-fun V16 () Bool)
(declare-fun V17 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V20 () Bool)
(declare-fun V21 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V26 () Bool)
(declare-fun V27 () Bool)
(declare-fun V28 () Bool)
(declare-fun V29 () Bool)
(declare-fun V30 () Bool)
(declare-fun V31 () Bool)
(declare-fun V32 () Bool)
(declare-fun V33 () Bool)
(declare-fun V34 () Bool)
(declare-fun V35 () Bool)
(declare-fun V36 () Bool)
(declare-fun V37 () Bool)
(declare-fun V38 () Bool)
(declare-fun V39 () Bool)
(declare-fun V40 () Bool)
(declare-fun V41 () Bool)
(declare-fun MV42 () (_ BitVec 2))
(assert (and (bvuge MV42 (_ bv0 2)) (bvult MV42 (_ bv3 2))))
(declare-fun MV42_0 () (_ Bool))
(declare-fun MV42_1 () (_ Bool))
(declare-fun MV43 () (_ BitVec 2))
(assert (and (bvuge MV43 (_ bv0 2)) (bvult MV43 (_ bv3 2))))
(declare-fun MV43_0 () (_ Bool))
(declare-fun MV43_1 () (_ Bool))
(declare-fun MV44 () (_ BitVec 2))
(declare-fun MV44_0 () (_ Bool))
(declare-fun MV44_1 () (_ Bool))
(declare-fun MV45 () (_ BitVec 2))
(declare-fun MV45_0 () (_ Bool))
(declare-fun MV45_1 () (_ Bool))
(declare-fun MV46 () (_ BitVec 2))
(declare-fun MV46_0 () (_ Bool))
(declare-fun MV46_1 () (_ Bool))
(declare-fun MV47 () (_ BitVec 2))
(declare-fun MV47_0 () (_ Bool))
(declare-fun MV47_1 () (_ Bool))
(declare-fun MV48 () (_ BitVec 2))
(declare-fun MV48_0 () (_ Bool))
(declare-fun MV48_1 () (_ Bool))
(declare-fun MV49 () (_ BitVec 2))
(declare-fun MV49_0 () (_ Bool))
(declare-fun MV49_1 () (_ Bool))
(declare-fun MV50 () (_ BitVec 2))
(declare-fun MV50_0 () (_ Bool))
(declare-fun MV50_1 () (_ Bool))
(declare-fun MV51 () (_ BitVec 2))
(declare-fun MV51_0 () (_ Bool))
(declare-fun MV51_1 () (_ Bool))
(declare-fun MV52 () (_ BitVec 2))
(declare-fun MV52_0 () (_ Bool))
(declare-fun MV52_1 () (_ Bool))
(declare-fun MV53 () (_ BitVec 2))
(declare-fun MV53_0 () (_ Bool))
(declare-fun MV53_1 () (_ Bool))
(declare-fun MV54 () (_ BitVec 2))
(declare-fun MV54_0 () (_ Bool))
(declare-fun MV54_1 () (_ Bool))
(assert benchmark_spinv)
(assert (or (not V1) (not (= MV42 (_ bv1 2)))))
(assert (or (not V1) (not (= MV42 (_ bv2 2)))))
(assert (or (not (= MV42 (_ bv1 2))) (not (= MV43 (_ bv1 2)))))
(assert (or (not (= MV42 (_ bv1 2))) (not (= MV43 (_ bv2 2)))))
(assert (or (not (= MV42 (_ bv2 2))) (not (= MV43 (_ bv1 2)))))
(assert (or (not (= MV42 (_ bv2 2))) (not (= MV43 (_ bv2 2)))))
(assert (or (not V1) (not (= MV43 (_ bv1 2)))))
(assert (or (not V1) (not (= MV43 (_ bv2 2)))))
(assert (or (not V2) (not V3)))
(assert (or (not V2) (not V4)))
(assert (or (not V2) (not V5)))
(assert (or (not V3) (not V4)))
(assert (or (not V3) (not V5)))
(assert (or (not V4) (not V5)))
(assert (or (not (= MV44 (_ bv1 2))) (not (= MV45 (_ bv1 2)))))
(assert (or (not (= MV44 (_ bv1 2))) (not (= MV45 (_ bv2 2)))))
(assert (or (not (= MV44 (_ bv1 2))) (not (= MV45 (_ bv3 2)))))
(assert (or (not (= MV44 (_ bv2 2))) (not (= MV45 (_ bv1 2)))))
(assert (or (not (= MV44 (_ bv2 2))) (not (= MV45 (_ bv2 2)))))
(assert (or (not (= MV44 (_ bv2 2))) (not (= MV45 (_ bv3 2)))))
(assert (or (not (= MV44 (_ bv3 2))) (not (= MV45 (_ bv1 2)))))
(assert (or (not (= MV44 (_ bv3 2))) (not (= MV45 (_ bv2 2)))))
(assert (or (not (= MV44 (_ bv3 2))) (not (= MV45 (_ bv3 2)))))
(assert (or (not V6) (not V7)))
(assert (or (not V8) (not V9)))
(assert (or (not V8) (not V10)))
(assert (or (not V11) (not V12)))
(assert (or (not V6) (not (= MV46 (_ bv1 2)))))
(assert (or (not V6) (not (= MV46 (_ bv2 2)))))
(assert (or (not V6) (not (= MV46 (_ bv3 2)))))
(assert (or (not V13) (not V14)))
(assert (or (not V10) (not V15)))
(assert (or (not V9) V15))
(assert (or (not V16) V17))
(assert (or V14 (not V18)))
(assert (or (not V10) V14))
(assert (or V9 (not V15)))
(assert (or V12 (not V20)))
(assert (or V12 (not V21)))
(assert (or V12 (not V22)))
(assert (or (not V23) (not (= MV47 (_ bv0 2)))))
(assert (or (not (= MV48 (_ bv1 2))) (not (= MV49 (_ bv0 2)))))
(assert (or (not (= MV48 (_ bv2 2))) (not (= MV49 (_ bv0 2)))))
(assert (or (not (= MV48 (_ bv3 2))) (not (= MV49 (_ bv0 2)))))
(assert (or (not V24) (not (= MV49 (_ bv0 2)))))
(assert (or V16 (not V17)))
(assert (or V12 (not V25)))
(assert (or (not V12) (or V21 (not V26))))
(assert (or (not V7) (or V9 V10)))
(assert (= MV42_0 (= (bvand MV42 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV42_1 (= (bvand MV42 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV43_0 (= (bvand MV43 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV43_1 (= (bvand MV43 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV44_0 (= (bvand MV44 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV44_1 (= (bvand MV44 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV45_0 (= (bvand MV45 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV45_1 (= (bvand MV45 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV46_0 (= (bvand MV46 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV46_1 (= (bvand MV46 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV47_0 (= (bvand MV47 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV47_1 (= (bvand MV47 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV48_0 (= (bvand MV48 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV48_1 (= (bvand MV48 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV49_0 (= (bvand MV49 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV49_1 (= (bvand MV49 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV50_0 (= (bvand MV50 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV50_1 (= (bvand MV50 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV51_0 (= (bvand MV51 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV51_1 (= (bvand MV51 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV52_0 (= (bvand MV52 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV52_1 (= (bvand MV52 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV53_0 (= (bvand MV53 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV53_1 (= (bvand MV53 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV54_0 (= (bvand MV54 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV54_1 (= (bvand MV54 (_ bv2 2)  ) (_ bv2 2))))

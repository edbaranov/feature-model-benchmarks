;; benchmark_19=2 V0=2 V1=2 V2=2 V3=2 V4=2 V5=2 V6=2 V7=2 V8=2 V9=2 V10=2 V11=2 V13=2 V14=2 V15=2 V16=2 V18=2 V19=2 V20=2 V21=2 V22=2 V23=2 V24=2 V25=2 V26=2 V28=2 V30=2 V32=2 V33=2 V35=2 V36=2 V38=2 V39=2 V40=2 V41=2 V42=2 V43=2 V44=2 V45=2 V46=2 V48=2 V49=2 V50=2 V51=2 V52=2 V53=2 V54=2 V55=2 V56=2 V57=2 V58=2 V60=2 V61=2 V62=2 V63=2 V64=2 V65=2 V66=2 V67=2 V68=2 V69=2 V70=2 V71=2 V72=2 V73=2 V74=2 V75=2 V76=2 V77=2 V78=2 V79=2 V80=2 V81=2 V83=2 V85=2 V86=2 V88=2 V90=2 V91=2 V93=2 V96=2 V97=2 V98=2 V99=2 V100=2 V101=2 V102=2 V103=2 V104=2 V105=2 V106=2 V107=2 V108=2 V109=2 V111=2 V112=2 V113=2 V114=2 V115=2 V116=2 V117=2 V118=2 V119=2 V120=2 V121=2 V124=2 V125=2 V126=2 V128=2 V129=2 V130=2 V131=2 V132=2 V133=2 V134=2 V135=2 V136=2 V137=2 V138=2 V139=2 V141=2 V142=2 V143=2 V144=2 V146=2 V147=2 V148=2 V150=2 V151=2 V152=2 V153=2 V155=2 V156=2 V157=2 V158=2 V159=2 V160=2 V161=2 V163=2 V164=2 V165=2 V166=2 V167=2 V168=2 V169=2 V170=2 V171=2 V172=2 V173=2 V174=2 V175=2 V176=2 V177=2 V178=2 V179=2 V180=2 V181=2 V182=2 V183=2 V184=2 V185=2 V186=2 V187=2 V188=2 V189=2 V190=2 V191=2 V192=2 V193=2 V194=2 V195=2 V196=2 MV12=5 MV17=3 MV27=4 MV29=4 MV31=4 MV34=3 MV37=6 MV47=3 MV59=5 MV82=3 MV84=4 MV87=6 MV89=4 MV92=3 MV94=3 MV95=3 MV110=4 MV122=6 MV123=3 MV127=4 MV140=5 MV145=3 MV149=6 MV154=4 MV162=4
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_19 () Bool)
(declare-fun V0 () Bool)
(declare-fun V1 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V4 () Bool)
(declare-fun V5 () Bool)
(declare-fun V6 () Bool)
(declare-fun V7 () Bool)
(declare-fun V8 () Bool)
(declare-fun V9 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V15 () Bool)
(declare-fun V16 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V20 () Bool)
(declare-fun V21 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V26 () Bool)
(declare-fun V28 () Bool)
(declare-fun V30 () Bool)
(declare-fun V32 () Bool)
(declare-fun V33 () Bool)
(declare-fun V35 () Bool)
(declare-fun V36 () Bool)
(declare-fun V38 () Bool)
(declare-fun V39 () Bool)
(declare-fun V40 () Bool)
(declare-fun V41 () Bool)
(declare-fun V42 () Bool)
(declare-fun V43 () Bool)
(declare-fun V44 () Bool)
(declare-fun V45 () Bool)
(declare-fun V46 () Bool)
(declare-fun V48 () Bool)
(declare-fun V49 () Bool)
(declare-fun V50 () Bool)
(declare-fun V51 () Bool)
(declare-fun V52 () Bool)
(declare-fun V53 () Bool)
(declare-fun V54 () Bool)
(declare-fun V55 () Bool)
(declare-fun V56 () Bool)
(declare-fun V57 () Bool)
(declare-fun V58 () Bool)
(declare-fun V60 () Bool)
(declare-fun V61 () Bool)
(declare-fun V62 () Bool)
(declare-fun V63 () Bool)
(declare-fun V64 () Bool)
(declare-fun V65 () Bool)
(declare-fun V66 () Bool)
(declare-fun V67 () Bool)
(declare-fun V68 () Bool)
(declare-fun V69 () Bool)
(declare-fun V70 () Bool)
(declare-fun V71 () Bool)
(declare-fun V72 () Bool)
(declare-fun V73 () Bool)
(declare-fun V74 () Bool)
(declare-fun V75 () Bool)
(declare-fun V76 () Bool)
(declare-fun V77 () Bool)
(declare-fun V78 () Bool)
(declare-fun V79 () Bool)
(declare-fun V80 () Bool)
(declare-fun V81 () Bool)
(declare-fun V83 () Bool)
(declare-fun V85 () Bool)
(declare-fun V86 () Bool)
(declare-fun V88 () Bool)
(declare-fun V90 () Bool)
(declare-fun V91 () Bool)
(declare-fun V93 () Bool)
(declare-fun V96 () Bool)
(declare-fun V97 () Bool)
(declare-fun V98 () Bool)
(declare-fun V99 () Bool)
(declare-fun V100 () Bool)
(declare-fun V101 () Bool)
(declare-fun V102 () Bool)
(declare-fun V103 () Bool)
(declare-fun V104 () Bool)
(declare-fun V105 () Bool)
(declare-fun V106 () Bool)
(declare-fun V107 () Bool)
(declare-fun V108 () Bool)
(declare-fun V109 () Bool)
(declare-fun V111 () Bool)
(declare-fun V112 () Bool)
(declare-fun V113 () Bool)
(declare-fun V114 () Bool)
(declare-fun V115 () Bool)
(declare-fun V116 () Bool)
(declare-fun V117 () Bool)
(declare-fun V118 () Bool)
(declare-fun V119 () Bool)
(declare-fun V120 () Bool)
(declare-fun V121 () Bool)
(declare-fun V124 () Bool)
(declare-fun V125 () Bool)
(declare-fun V126 () Bool)
(declare-fun V128 () Bool)
(declare-fun V129 () Bool)
(declare-fun V130 () Bool)
(declare-fun V131 () Bool)
(declare-fun V132 () Bool)
(declare-fun V133 () Bool)
(declare-fun V134 () Bool)
(declare-fun V135 () Bool)
(declare-fun V136 () Bool)
(declare-fun V137 () Bool)
(declare-fun V138 () Bool)
(declare-fun V139 () Bool)
(declare-fun V141 () Bool)
(declare-fun V142 () Bool)
(declare-fun V143 () Bool)
(declare-fun V144 () Bool)
(declare-fun V146 () Bool)
(declare-fun V147 () Bool)
(declare-fun V148 () Bool)
(declare-fun V150 () Bool)
(declare-fun V151 () Bool)
(declare-fun V152 () Bool)
(declare-fun V153 () Bool)
(declare-fun V155 () Bool)
(declare-fun V156 () Bool)
(declare-fun V157 () Bool)
(declare-fun V158 () Bool)
(declare-fun V159 () Bool)
(declare-fun V160 () Bool)
(declare-fun V161 () Bool)
(declare-fun V163 () Bool)
(declare-fun V164 () Bool)
(declare-fun V165 () Bool)
(declare-fun V166 () Bool)
(declare-fun V167 () Bool)
(declare-fun V168 () Bool)
(declare-fun V169 () Bool)
(declare-fun V170 () Bool)
(declare-fun V171 () Bool)
(declare-fun V172 () Bool)
(declare-fun V173 () Bool)
(declare-fun V174 () Bool)
(declare-fun V175 () Bool)
(declare-fun V176 () Bool)
(declare-fun V177 () Bool)
(declare-fun V178 () Bool)
(declare-fun V179 () Bool)
(declare-fun V180 () Bool)
(declare-fun V181 () Bool)
(declare-fun V182 () Bool)
(declare-fun V183 () Bool)
(declare-fun V184 () Bool)
(declare-fun V185 () Bool)
(declare-fun V186 () Bool)
(declare-fun V187 () Bool)
(declare-fun V188 () Bool)
(declare-fun V189 () Bool)
(declare-fun V190 () Bool)
(declare-fun V191 () Bool)
(declare-fun V192 () Bool)
(declare-fun V193 () Bool)
(declare-fun V194 () Bool)
(declare-fun V195 () Bool)
(declare-fun V196 () Bool)
(declare-fun MV12 () (_ BitVec 3))
(assert (and (bvuge MV12 (_ bv0 3)) (bvult MV12 (_ bv5 3))))
(declare-fun MV12_0 () (_ Bool))
(declare-fun MV12_1 () (_ Bool))
(declare-fun MV12_2 () (_ Bool))
(declare-fun MV17 () (_ BitVec 2))
(assert (and (bvuge MV17 (_ bv0 2)) (bvult MV17 (_ bv3 2))))
(declare-fun MV17_0 () (_ Bool))
(declare-fun MV17_1 () (_ Bool))
(declare-fun MV27 () (_ BitVec 2))
(declare-fun MV27_0 () (_ Bool))
(declare-fun MV27_1 () (_ Bool))
(declare-fun MV29 () (_ BitVec 2))
(declare-fun MV29_0 () (_ Bool))
(declare-fun MV29_1 () (_ Bool))
(declare-fun MV31 () (_ BitVec 2))
(declare-fun MV31_0 () (_ Bool))
(declare-fun MV31_1 () (_ Bool))
(declare-fun MV34 () (_ BitVec 2))
(assert (and (bvuge MV34 (_ bv0 2)) (bvult MV34 (_ bv3 2))))
(declare-fun MV34_0 () (_ Bool))
(declare-fun MV34_1 () (_ Bool))
(declare-fun MV37 () (_ BitVec 3))
(assert (and (bvuge MV37 (_ bv0 3)) (bvult MV37 (_ bv6 3))))
(declare-fun MV37_0 () (_ Bool))
(declare-fun MV37_1 () (_ Bool))
(declare-fun MV37_2 () (_ Bool))
(declare-fun MV47 () (_ BitVec 2))
(assert (and (bvuge MV47 (_ bv0 2)) (bvult MV47 (_ bv3 2))))
(declare-fun MV47_0 () (_ Bool))
(declare-fun MV47_1 () (_ Bool))
(declare-fun MV59 () (_ BitVec 3))
(assert (and (bvuge MV59 (_ bv0 3)) (bvult MV59 (_ bv5 3))))
(declare-fun MV59_0 () (_ Bool))
(declare-fun MV59_1 () (_ Bool))
(declare-fun MV59_2 () (_ Bool))
(declare-fun MV82 () (_ BitVec 2))
(assert (and (bvuge MV82 (_ bv0 2)) (bvult MV82 (_ bv3 2))))
(declare-fun MV82_0 () (_ Bool))
(declare-fun MV82_1 () (_ Bool))
(declare-fun MV84 () (_ BitVec 2))
(declare-fun MV84_0 () (_ Bool))
(declare-fun MV84_1 () (_ Bool))
(declare-fun MV87 () (_ BitVec 3))
(assert (and (bvuge MV87 (_ bv0 3)) (bvult MV87 (_ bv6 3))))
(declare-fun MV87_0 () (_ Bool))
(declare-fun MV87_1 () (_ Bool))
(declare-fun MV87_2 () (_ Bool))
(declare-fun MV89 () (_ BitVec 2))
(declare-fun MV89_0 () (_ Bool))
(declare-fun MV89_1 () (_ Bool))
(declare-fun MV92 () (_ BitVec 2))
(assert (and (bvuge MV92 (_ bv0 2)) (bvult MV92 (_ bv3 2))))
(declare-fun MV92_0 () (_ Bool))
(declare-fun MV92_1 () (_ Bool))
(declare-fun MV94 () (_ BitVec 2))
(assert (and (bvuge MV94 (_ bv0 2)) (bvult MV94 (_ bv3 2))))
(declare-fun MV94_0 () (_ Bool))
(declare-fun MV94_1 () (_ Bool))
(declare-fun MV95 () (_ BitVec 2))
(assert (and (bvuge MV95 (_ bv0 2)) (bvult MV95 (_ bv3 2))))
(declare-fun MV95_0 () (_ Bool))
(declare-fun MV95_1 () (_ Bool))
(declare-fun MV110 () (_ BitVec 2))
(declare-fun MV110_0 () (_ Bool))
(declare-fun MV110_1 () (_ Bool))
(declare-fun MV122 () (_ BitVec 3))
(assert (and (bvuge MV122 (_ bv0 3)) (bvult MV122 (_ bv6 3))))
(declare-fun MV122_0 () (_ Bool))
(declare-fun MV122_1 () (_ Bool))
(declare-fun MV122_2 () (_ Bool))
(declare-fun MV123 () (_ BitVec 2))
(assert (and (bvuge MV123 (_ bv0 2)) (bvult MV123 (_ bv3 2))))
(declare-fun MV123_0 () (_ Bool))
(declare-fun MV123_1 () (_ Bool))
(declare-fun MV127 () (_ BitVec 2))
(declare-fun MV127_0 () (_ Bool))
(declare-fun MV127_1 () (_ Bool))
(declare-fun MV140 () (_ BitVec 3))
(assert (and (bvuge MV140 (_ bv0 3)) (bvult MV140 (_ bv5 3))))
(declare-fun MV140_0 () (_ Bool))
(declare-fun MV140_1 () (_ Bool))
(declare-fun MV140_2 () (_ Bool))
(declare-fun MV145 () (_ BitVec 2))
(assert (and (bvuge MV145 (_ bv0 2)) (bvult MV145 (_ bv3 2))))
(declare-fun MV145_0 () (_ Bool))
(declare-fun MV145_1 () (_ Bool))
(declare-fun MV149 () (_ BitVec 3))
(assert (and (bvuge MV149 (_ bv0 3)) (bvult MV149 (_ bv6 3))))
(declare-fun MV149_0 () (_ Bool))
(declare-fun MV149_1 () (_ Bool))
(declare-fun MV149_2 () (_ Bool))
(declare-fun MV154 () (_ BitVec 2))
(declare-fun MV154_0 () (_ Bool))
(declare-fun MV154_1 () (_ Bool))
(declare-fun MV162 () (_ BitVec 2))
(declare-fun MV162_0 () (_ Bool))
(declare-fun MV162_1 () (_ Bool))
(assert benchmark_19)
(assert (or V1 (not (= MV27 (_ bv2 2)))))
(assert (or (not (= MV27 (_ bv0 2))) (not V38)))
(assert (or (not V22) V38))
(assert (or (not (= MV17 (_ bv0 2))) V35))
(assert (or V7 V13))
(assert (or (not V32) (not (= MV34 (_ bv2 2)))))
(assert (or (not V33) (not V38)))
(assert (or (not V0) (not V20)))
(assert (or (not (= MV17 (_ bv1 2))) V23))
(assert (or (not V4) V26))
(assert (or (not V10) V39))
(assert (or (not V2) (not V9)))
(assert (or (not V5) V11))
(assert (or (not V33) (not (= MV37 (_ bv4 3)))))
(assert (or V28 V38))
(assert (or (not V3) V33))
(assert (or (not V11) (not V30)))
(assert (or (not V35) V36))
(assert (or (not V2) (not V8)))
(assert (or (not V6) (not (= MV34 (_ bv2 2)))))
(assert (or (not (= MV12 (_ bv1 3))) V36))
(assert (or (not V35) V39))
(assert (or (not V19) V38))
(assert (or (not V24) (not V38)))
(assert (or (not V36) (not (= MV37 (_ bv0 3)))))
(assert (or (not (= MV31 (_ bv0 2))) (not (= MV37 (_ bv2 3)))))
(assert (or (not V16) V33))
(assert (or V25 (not V38)))
(assert (or (not (= MV34 (_ bv2 2))) V35))
(assert (or (not V14) (not V21)))
(assert (or (not V7) V35))
(assert (or V15 V32))
(assert (or V0 V1))
(assert (or (not V35) (not (= MV37 (_ bv1 3)))))
(assert (or V0 (not V13)))
(assert (or (not V18) V35))
(assert (or V28 (not V35)))
(assert (or (not (= MV29 (_ bv2 2))) V35))
(assert (or (not (= MV17 (_ bv2 2))) (or V33 (not V39))))
(assert (or V14 (or (not (= MV34 (_ bv2 2))) (not V39))))
(assert (or (not V3) (or V7 (not V36))))
(assert (or (not (= MV31 (_ bv1 2))) (or (not (= MV34 (_ bv2 2))) (not V38))))
(assert (or (not (= MV34 (_ bv2 2))) (or (not (= MV37 (_ bv4 3))) (not V39))))
(assert (= MV12_0 (= (bvand MV12 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV12_1 (= (bvand MV12 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV12_2 (= (bvand MV12 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV17_0 (= (bvand MV17 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV17_1 (= (bvand MV17 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV27_0 (= (bvand MV27 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV27_1 (= (bvand MV27 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV29_0 (= (bvand MV29 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV29_1 (= (bvand MV29 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV31_0 (= (bvand MV31 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV31_1 (= (bvand MV31 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV34_0 (= (bvand MV34 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV34_1 (= (bvand MV34 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV37_0 (= (bvand MV37 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV37_1 (= (bvand MV37 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV37_2 (= (bvand MV37 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV47_0 (= (bvand MV47 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV47_1 (= (bvand MV47 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV59_0 (= (bvand MV59 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV59_1 (= (bvand MV59 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV59_2 (= (bvand MV59 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV82_0 (= (bvand MV82 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV82_1 (= (bvand MV82 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV84_0 (= (bvand MV84 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV84_1 (= (bvand MV84 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV87_0 (= (bvand MV87 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV87_1 (= (bvand MV87 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV87_2 (= (bvand MV87 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV89_0 (= (bvand MV89 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV89_1 (= (bvand MV89 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV92_0 (= (bvand MV92 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV92_1 (= (bvand MV92 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV94_0 (= (bvand MV94 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV94_1 (= (bvand MV94 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV95_0 (= (bvand MV95 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV95_1 (= (bvand MV95 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV110_0 (= (bvand MV110 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV110_1 (= (bvand MV110 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV122_0 (= (bvand MV122 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV122_1 (= (bvand MV122 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV122_2 (= (bvand MV122 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV123_0 (= (bvand MV123 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV123_1 (= (bvand MV123 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV127_0 (= (bvand MV127 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV127_1 (= (bvand MV127 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV140_0 (= (bvand MV140 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV140_1 (= (bvand MV140 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV140_2 (= (bvand MV140 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV145_0 (= (bvand MV145 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV145_1 (= (bvand MV145 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV149_0 (= (bvand MV149 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV149_1 (= (bvand MV149 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV149_2 (= (bvand MV149 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV154_0 (= (bvand MV154 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV154_1 (= (bvand MV154 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV162_0 (= (bvand MV162 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV162_1 (= (bvand MV162 (_ bv2 2)  ) (_ bv2 2))))

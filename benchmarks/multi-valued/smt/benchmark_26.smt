;; benchmark_26=2 V0=2 V1=2 V2=2 V3=2 V4=2 V5=2 V6=2 V8=2 V10=2 V11=2 V12=2 V13=2 V14=2 V16=2 V17=2 V18=2 V19=2 V20=2 V22=2 V23=2 V24=2 V25=2 V26=2 V27=2 V28=2 V29=2 V30=2 V31=2 V32=2 V33=2 V35=2 V36=2 V37=2 V39=2 V40=2 V41=2 V42=2 V43=2 V44=2 V45=2 V46=2 V47=2 V48=2 V49=2 V50=2 V51=2 V52=2 V54=2 V55=2 V56=2 V57=2 V58=2 V59=2 V60=2 V61=2 V62=2 V63=2 V64=2 V65=2 V67=2 V68=2 V69=2 V70=2 V71=2 V72=2 V73=2 V74=2 V75=2 V76=2 V77=2 V78=2 V79=2 V80=2 V81=2 V82=2 V83=2 V84=2 V85=2 V86=2 V87=2 V88=2 V89=2 V90=2 V91=2 V92=2 V93=2 V94=2 MV7=5 MV9=5 MV15=3 MV21=5 MV34=4 MV38=4 MV53=4 MV66=5
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_26 () Bool)
(declare-fun V0 () Bool)
(declare-fun V1 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V4 () Bool)
(declare-fun V5 () Bool)
(declare-fun V6 () Bool)
(declare-fun V8 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V12 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V16 () Bool)
(declare-fun V17 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V20 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V26 () Bool)
(declare-fun V27 () Bool)
(declare-fun V28 () Bool)
(declare-fun V29 () Bool)
(declare-fun V30 () Bool)
(declare-fun V31 () Bool)
(declare-fun V32 () Bool)
(declare-fun V33 () Bool)
(declare-fun V35 () Bool)
(declare-fun V36 () Bool)
(declare-fun V37 () Bool)
(declare-fun V39 () Bool)
(declare-fun V40 () Bool)
(declare-fun V41 () Bool)
(declare-fun V42 () Bool)
(declare-fun V43 () Bool)
(declare-fun V44 () Bool)
(declare-fun V45 () Bool)
(declare-fun V46 () Bool)
(declare-fun V47 () Bool)
(declare-fun V48 () Bool)
(declare-fun V49 () Bool)
(declare-fun V50 () Bool)
(declare-fun V51 () Bool)
(declare-fun V52 () Bool)
(declare-fun V54 () Bool)
(declare-fun V55 () Bool)
(declare-fun V56 () Bool)
(declare-fun V57 () Bool)
(declare-fun V58 () Bool)
(declare-fun V59 () Bool)
(declare-fun V60 () Bool)
(declare-fun V61 () Bool)
(declare-fun V62 () Bool)
(declare-fun V63 () Bool)
(declare-fun V64 () Bool)
(declare-fun V65 () Bool)
(declare-fun V67 () Bool)
(declare-fun V68 () Bool)
(declare-fun V69 () Bool)
(declare-fun V70 () Bool)
(declare-fun V71 () Bool)
(declare-fun V72 () Bool)
(declare-fun V73 () Bool)
(declare-fun V74 () Bool)
(declare-fun V75 () Bool)
(declare-fun V76 () Bool)
(declare-fun V77 () Bool)
(declare-fun V78 () Bool)
(declare-fun V79 () Bool)
(declare-fun V80 () Bool)
(declare-fun V81 () Bool)
(declare-fun V82 () Bool)
(declare-fun V83 () Bool)
(declare-fun V84 () Bool)
(declare-fun V85 () Bool)
(declare-fun V86 () Bool)
(declare-fun V87 () Bool)
(declare-fun V88 () Bool)
(declare-fun V89 () Bool)
(declare-fun V90 () Bool)
(declare-fun V91 () Bool)
(declare-fun V92 () Bool)
(declare-fun V93 () Bool)
(declare-fun V94 () Bool)
(declare-fun MV7 () (_ BitVec 3))
(assert (and (bvuge MV7 (_ bv0 3)) (bvult MV7 (_ bv5 3))))
(declare-fun MV7_0 () (_ Bool))
(declare-fun MV7_1 () (_ Bool))
(declare-fun MV7_2 () (_ Bool))
(declare-fun MV9 () (_ BitVec 3))
(assert (and (bvuge MV9 (_ bv0 3)) (bvult MV9 (_ bv5 3))))
(declare-fun MV9_0 () (_ Bool))
(declare-fun MV9_1 () (_ Bool))
(declare-fun MV9_2 () (_ Bool))
(declare-fun MV15 () (_ BitVec 2))
(assert (and (bvuge MV15 (_ bv0 2)) (bvult MV15 (_ bv3 2))))
(declare-fun MV15_0 () (_ Bool))
(declare-fun MV15_1 () (_ Bool))
(declare-fun MV21 () (_ BitVec 3))
(assert (and (bvuge MV21 (_ bv0 3)) (bvult MV21 (_ bv5 3))))
(declare-fun MV21_0 () (_ Bool))
(declare-fun MV21_1 () (_ Bool))
(declare-fun MV21_2 () (_ Bool))
(declare-fun MV34 () (_ BitVec 2))
(declare-fun MV34_0 () (_ Bool))
(declare-fun MV34_1 () (_ Bool))
(declare-fun MV38 () (_ BitVec 2))
(declare-fun MV38_0 () (_ Bool))
(declare-fun MV38_1 () (_ Bool))
(declare-fun MV53 () (_ BitVec 2))
(declare-fun MV53_0 () (_ Bool))
(declare-fun MV53_1 () (_ Bool))
(declare-fun MV66 () (_ BitVec 3))
(assert (and (bvuge MV66 (_ bv0 3)) (bvult MV66 (_ bv5 3))))
(declare-fun MV66_0 () (_ Bool))
(declare-fun MV66_1 () (_ Bool))
(declare-fun MV66_2 () (_ Bool))
(assert benchmark_26)
(assert (or (not V16) (not V17)))
(assert (or (not V5) (not V16)))
(assert (or (not (= MV15 (_ bv1 2))) V18))
(assert (or V13 (not V14)))
(assert (or (not V6) (not V14)))
(assert (or V11 V17))
(assert (or V5 (not V16)))
(assert (or (not V1) (not (= MV9 (_ bv1 3)))))
(assert (or V2 V14))
(assert (or (not (= MV9 (_ bv1 3))) (not (= MV15 (_ bv0 2)))))
(assert (or V14 (not V16)))
(assert (or V1 (not (= MV15 (_ bv0 2)))))
(assert (or (not V0) (not (= MV7 (_ bv4 3)))))
(assert (or (not V4) (not V5)))
(assert (or V10 (not V12)))
(assert (or (not V3) (not (= MV15 (_ bv0 2)))))
(assert (or (not V16) V17))
(assert (or V1 V17))
(assert (or (not V14) (not V18)))
(assert (or (not (= MV9 (_ bv1 3))) (not V18)))
(assert (or V12 V16))
(assert (or (not V1) (not V5)))
(assert (or V2 (not V18)))
(assert (or (not V2) V12))
(assert (or V5 V8))
(assert (or V3 V13))
(assert (or V3 V12))
(assert (or (not V10) (not V16)))
(assert (or (not V0) (or (not V11) V18)))
(assert (or V6 (or (not V8) (not V10))))
(assert (or (not V13) (or (not V16) V18)))
(assert (or V0 (or (not V8) (not V18))))
(assert (= MV7_0 (= (bvand MV7 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV7_1 (= (bvand MV7 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV7_2 (= (bvand MV7 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV9_0 (= (bvand MV9 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV9_1 (= (bvand MV9 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV9_2 (= (bvand MV9 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV15_0 (= (bvand MV15 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV15_1 (= (bvand MV15 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV21_0 (= (bvand MV21 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV21_1 (= (bvand MV21 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV21_2 (= (bvand MV21 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV34_0 (= (bvand MV34 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV34_1 (= (bvand MV34 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV38_0 (= (bvand MV38 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV38_1 (= (bvand MV38 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV53_0 (= (bvand MV53 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV53_1 (= (bvand MV53 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV66_0 (= (bvand MV66 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV66_1 (= (bvand MV66 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV66_2 (= (bvand MV66 (_ bv4 3)  ) (_ bv4 3))))

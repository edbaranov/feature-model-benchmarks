;; benchmark_24=2 V0=2 V2=2 V3=2 V4=2 V5=2 V6=2 V7=2 V9=2 V10=2 V11=2 V12=2 V13=2 V14=2 V15=2 V16=2 V17=2 V18=2 V19=2 V20=2 V21=2 V22=2 V23=2 V24=2 V25=2 V27=2 V28=2 V29=2 V30=2 V31=2 V32=2 V33=2 V34=2 V35=2 V36=2 V37=2 V38=2 V39=2 V40=2 V41=2 V42=2 V43=2 V44=2 V45=2 V46=2 V47=2 V48=2 V49=2 V50=2 V51=2 V52=2 V53=2 V54=2 V55=2 V56=2 V57=2 V58=2 V59=2 V60=2 V61=2 V62=2 V63=2 V65=2 V66=2 V67=2 V68=2 V69=2 V70=2 V71=2 V72=2 V73=2 V74=2 V75=2 V76=2 V77=2 V78=2 V79=2 V80=2 V81=2 V82=2 V83=2 V84=2 V86=2 V87=2 V88=2 V90=2 V91=2 V92=2 V93=2 V94=2 V95=2 V97=2 V98=2 V99=2 V100=2 V101=2 V103=2 V104=2 V105=2 V106=2 V108=2 V109=2 V110=2 V111=2 V112=2 V113=2 V114=2 V115=2 V116=2 V117=2 V118=2 MV1=6 MV8=6 MV26=5 MV64=5 MV85=5 MV89=3 MV96=6 MV102=3 MV107=6
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_24 () Bool)
(declare-fun V0 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V4 () Bool)
(declare-fun V5 () Bool)
(declare-fun V6 () Bool)
(declare-fun V7 () Bool)
(declare-fun V9 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V12 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V15 () Bool)
(declare-fun V16 () Bool)
(declare-fun V17 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V20 () Bool)
(declare-fun V21 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V27 () Bool)
(declare-fun V28 () Bool)
(declare-fun V29 () Bool)
(declare-fun V30 () Bool)
(declare-fun V31 () Bool)
(declare-fun V32 () Bool)
(declare-fun V33 () Bool)
(declare-fun V34 () Bool)
(declare-fun V35 () Bool)
(declare-fun V36 () Bool)
(declare-fun V37 () Bool)
(declare-fun V38 () Bool)
(declare-fun V39 () Bool)
(declare-fun V40 () Bool)
(declare-fun V41 () Bool)
(declare-fun V42 () Bool)
(declare-fun V43 () Bool)
(declare-fun V44 () Bool)
(declare-fun V45 () Bool)
(declare-fun V46 () Bool)
(declare-fun V47 () Bool)
(declare-fun V48 () Bool)
(declare-fun V49 () Bool)
(declare-fun V50 () Bool)
(declare-fun V51 () Bool)
(declare-fun V52 () Bool)
(declare-fun V53 () Bool)
(declare-fun V54 () Bool)
(declare-fun V55 () Bool)
(declare-fun V56 () Bool)
(declare-fun V57 () Bool)
(declare-fun V58 () Bool)
(declare-fun V59 () Bool)
(declare-fun V60 () Bool)
(declare-fun V61 () Bool)
(declare-fun V62 () Bool)
(declare-fun V63 () Bool)
(declare-fun V65 () Bool)
(declare-fun V66 () Bool)
(declare-fun V67 () Bool)
(declare-fun V68 () Bool)
(declare-fun V69 () Bool)
(declare-fun V70 () Bool)
(declare-fun V71 () Bool)
(declare-fun V72 () Bool)
(declare-fun V73 () Bool)
(declare-fun V74 () Bool)
(declare-fun V75 () Bool)
(declare-fun V76 () Bool)
(declare-fun V77 () Bool)
(declare-fun V78 () Bool)
(declare-fun V79 () Bool)
(declare-fun V80 () Bool)
(declare-fun V81 () Bool)
(declare-fun V82 () Bool)
(declare-fun V83 () Bool)
(declare-fun V84 () Bool)
(declare-fun V86 () Bool)
(declare-fun V87 () Bool)
(declare-fun V88 () Bool)
(declare-fun V90 () Bool)
(declare-fun V91 () Bool)
(declare-fun V92 () Bool)
(declare-fun V93 () Bool)
(declare-fun V94 () Bool)
(declare-fun V95 () Bool)
(declare-fun V97 () Bool)
(declare-fun V98 () Bool)
(declare-fun V99 () Bool)
(declare-fun V100 () Bool)
(declare-fun V101 () Bool)
(declare-fun V103 () Bool)
(declare-fun V104 () Bool)
(declare-fun V105 () Bool)
(declare-fun V106 () Bool)
(declare-fun V108 () Bool)
(declare-fun V109 () Bool)
(declare-fun V110 () Bool)
(declare-fun V111 () Bool)
(declare-fun V112 () Bool)
(declare-fun V113 () Bool)
(declare-fun V114 () Bool)
(declare-fun V115 () Bool)
(declare-fun V116 () Bool)
(declare-fun V117 () Bool)
(declare-fun V118 () Bool)
(declare-fun MV1 () (_ BitVec 3))
(assert (and (bvuge MV1 (_ bv0 3)) (bvult MV1 (_ bv6 3))))
(declare-fun MV1_0 () (_ Bool))
(declare-fun MV1_1 () (_ Bool))
(declare-fun MV1_2 () (_ Bool))
(declare-fun MV8 () (_ BitVec 3))
(assert (and (bvuge MV8 (_ bv0 3)) (bvult MV8 (_ bv6 3))))
(declare-fun MV8_0 () (_ Bool))
(declare-fun MV8_1 () (_ Bool))
(declare-fun MV8_2 () (_ Bool))
(declare-fun MV26 () (_ BitVec 3))
(assert (and (bvuge MV26 (_ bv0 3)) (bvult MV26 (_ bv5 3))))
(declare-fun MV26_0 () (_ Bool))
(declare-fun MV26_1 () (_ Bool))
(declare-fun MV26_2 () (_ Bool))
(declare-fun MV64 () (_ BitVec 3))
(assert (and (bvuge MV64 (_ bv0 3)) (bvult MV64 (_ bv5 3))))
(declare-fun MV64_0 () (_ Bool))
(declare-fun MV64_1 () (_ Bool))
(declare-fun MV64_2 () (_ Bool))
(declare-fun MV85 () (_ BitVec 3))
(assert (and (bvuge MV85 (_ bv0 3)) (bvult MV85 (_ bv5 3))))
(declare-fun MV85_0 () (_ Bool))
(declare-fun MV85_1 () (_ Bool))
(declare-fun MV85_2 () (_ Bool))
(declare-fun MV89 () (_ BitVec 2))
(assert (and (bvuge MV89 (_ bv0 2)) (bvult MV89 (_ bv3 2))))
(declare-fun MV89_0 () (_ Bool))
(declare-fun MV89_1 () (_ Bool))
(declare-fun MV96 () (_ BitVec 3))
(assert (and (bvuge MV96 (_ bv0 3)) (bvult MV96 (_ bv6 3))))
(declare-fun MV96_0 () (_ Bool))
(declare-fun MV96_1 () (_ Bool))
(declare-fun MV96_2 () (_ Bool))
(declare-fun MV102 () (_ BitVec 2))
(assert (and (bvuge MV102 (_ bv0 2)) (bvult MV102 (_ bv3 2))))
(declare-fun MV102_0 () (_ Bool))
(declare-fun MV102_1 () (_ Bool))
(declare-fun MV107 () (_ BitVec 3))
(assert (and (bvuge MV107 (_ bv0 3)) (bvult MV107 (_ bv6 3))))
(declare-fun MV107_0 () (_ Bool))
(declare-fun MV107_1 () (_ Bool))
(declare-fun MV107_2 () (_ Bool))
(assert benchmark_24)
(assert (or V12 (not V22)))
(assert (or (not (= MV1 (_ bv2 3))) (not V14)))
(assert (or (not (= MV8 (_ bv4 3))) V19))
(assert (or (not V7) V19))
(assert (or (not V6) V23))
(assert (or V4 V22))
(assert (or (not V21) V23))
(assert (or (not V0) V22))
(assert (or V13 V17))
(assert (or V21 V22))
(assert (or V15 V16))
(assert (or (not V5) (not V22)))
(assert (or (not V2) V20))
(assert (or V6 (not V22)))
(assert (or V19 V21))
(assert (or (not V20) V22))
(assert (or V12 (not V13)))
(assert (or V4 V19))
(assert (or V6 V20))
(assert (or V14 V15))
(assert (or (not (= MV1 (_ bv2 3))) V23))
(assert (or (not V20) V21))
(assert (or (not V0) V10))
(assert (or (not V15) V22))
(assert (or (not V11) V18))
(assert (or V7 (or (not V20) V23)))
(assert (or (not V3) (or V19 V23)))
(assert (or (not V0) (or (not V9) V23)))
(assert (or (not V18) (or V21 V23)))
(assert (= MV1_0 (= (bvand MV1 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV1_1 (= (bvand MV1 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV1_2 (= (bvand MV1 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV8_0 (= (bvand MV8 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV8_1 (= (bvand MV8 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV8_2 (= (bvand MV8 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV26_0 (= (bvand MV26 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV26_1 (= (bvand MV26 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV26_2 (= (bvand MV26 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV64_0 (= (bvand MV64 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV64_1 (= (bvand MV64 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV64_2 (= (bvand MV64 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV85_0 (= (bvand MV85 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV85_1 (= (bvand MV85 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV85_2 (= (bvand MV85 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV89_0 (= (bvand MV89 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV89_1 (= (bvand MV89 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV96_0 (= (bvand MV96 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV96_1 (= (bvand MV96 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV96_2 (= (bvand MV96 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV102_0 (= (bvand MV102 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV102_1 (= (bvand MV102 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV107_0 (= (bvand MV107 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV107_1 (= (bvand MV107 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV107_2 (= (bvand MV107 (_ bv4 3)  ) (_ bv4 3))))

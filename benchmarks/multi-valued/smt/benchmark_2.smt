;; benchmark_2=2 V0=2 V1=2 V2=2 V3=2 V4=2 V5=2 V7=2 V8=2 V9=2 V10=2 V11=2 V12=2 V13=2 V14=2 V15=2 V16=2 V17=2 V18=2 V19=2 V20=2 V21=2 V22=2 V23=2 V24=2 V25=2 V26=2 V27=2 V30=2 V31=2 V32=2 V33=2 V34=2 V35=2 V36=2 V37=2 V38=2 V39=2 V40=2 V41=2 V42=2 V43=2 V45=2 V46=2 V47=2 V48=2 V49=2 V52=2 V53=2 V54=2 V55=2 V56=2 V57=2 V58=2 V59=2 V60=2 V61=2 V63=2 V64=2 V65=2 V66=2 V67=2 V69=2 V70=2 V71=2 V72=2 V73=2 V74=2 V75=2 V76=2 V77=2 V78=2 V79=2 V80=2 V81=2 V82=2 V83=2 V84=2 V85=2 V86=2 V87=2 V88=2 V89=2 V90=2 V91=2 V92=2 V93=2 MV6=4 MV28=5 MV29=6 MV44=4 MV50=3 MV51=4 MV62=3 MV68=3
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_2 () Bool)
(declare-fun V0 () Bool)
(declare-fun V1 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V4 () Bool)
(declare-fun V5 () Bool)
(declare-fun V7 () Bool)
(declare-fun V8 () Bool)
(declare-fun V9 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V12 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V15 () Bool)
(declare-fun V16 () Bool)
(declare-fun V17 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V20 () Bool)
(declare-fun V21 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V26 () Bool)
(declare-fun V27 () Bool)
(declare-fun V30 () Bool)
(declare-fun V31 () Bool)
(declare-fun V32 () Bool)
(declare-fun V33 () Bool)
(declare-fun V34 () Bool)
(declare-fun V35 () Bool)
(declare-fun V36 () Bool)
(declare-fun V37 () Bool)
(declare-fun V38 () Bool)
(declare-fun V39 () Bool)
(declare-fun V40 () Bool)
(declare-fun V41 () Bool)
(declare-fun V42 () Bool)
(declare-fun V43 () Bool)
(declare-fun V45 () Bool)
(declare-fun V46 () Bool)
(declare-fun V47 () Bool)
(declare-fun V48 () Bool)
(declare-fun V49 () Bool)
(declare-fun V52 () Bool)
(declare-fun V53 () Bool)
(declare-fun V54 () Bool)
(declare-fun V55 () Bool)
(declare-fun V56 () Bool)
(declare-fun V57 () Bool)
(declare-fun V58 () Bool)
(declare-fun V59 () Bool)
(declare-fun V60 () Bool)
(declare-fun V61 () Bool)
(declare-fun V63 () Bool)
(declare-fun V64 () Bool)
(declare-fun V65 () Bool)
(declare-fun V66 () Bool)
(declare-fun V67 () Bool)
(declare-fun V69 () Bool)
(declare-fun V70 () Bool)
(declare-fun V71 () Bool)
(declare-fun V72 () Bool)
(declare-fun V73 () Bool)
(declare-fun V74 () Bool)
(declare-fun V75 () Bool)
(declare-fun V76 () Bool)
(declare-fun V77 () Bool)
(declare-fun V78 () Bool)
(declare-fun V79 () Bool)
(declare-fun V80 () Bool)
(declare-fun V81 () Bool)
(declare-fun V82 () Bool)
(declare-fun V83 () Bool)
(declare-fun V84 () Bool)
(declare-fun V85 () Bool)
(declare-fun V86 () Bool)
(declare-fun V87 () Bool)
(declare-fun V88 () Bool)
(declare-fun V89 () Bool)
(declare-fun V90 () Bool)
(declare-fun V91 () Bool)
(declare-fun V92 () Bool)
(declare-fun V93 () Bool)
(declare-fun MV6 () (_ BitVec 2))
(declare-fun MV6_0 () (_ Bool))
(declare-fun MV6_1 () (_ Bool))
(declare-fun MV28 () (_ BitVec 3))
(assert (and (bvuge MV28 (_ bv0 3)) (bvult MV28 (_ bv5 3))))
(declare-fun MV28_0 () (_ Bool))
(declare-fun MV28_1 () (_ Bool))
(declare-fun MV28_2 () (_ Bool))
(declare-fun MV29 () (_ BitVec 3))
(assert (and (bvuge MV29 (_ bv0 3)) (bvult MV29 (_ bv6 3))))
(declare-fun MV29_0 () (_ Bool))
(declare-fun MV29_1 () (_ Bool))
(declare-fun MV29_2 () (_ Bool))
(declare-fun MV44 () (_ BitVec 2))
(declare-fun MV44_0 () (_ Bool))
(declare-fun MV44_1 () (_ Bool))
(declare-fun MV50 () (_ BitVec 2))
(assert (and (bvuge MV50 (_ bv0 2)) (bvult MV50 (_ bv3 2))))
(declare-fun MV50_0 () (_ Bool))
(declare-fun MV50_1 () (_ Bool))
(declare-fun MV51 () (_ BitVec 2))
(declare-fun MV51_0 () (_ Bool))
(declare-fun MV51_1 () (_ Bool))
(declare-fun MV62 () (_ BitVec 2))
(assert (and (bvuge MV62 (_ bv0 2)) (bvult MV62 (_ bv3 2))))
(declare-fun MV62_0 () (_ Bool))
(declare-fun MV62_1 () (_ Bool))
(declare-fun MV68 () (_ BitVec 2))
(assert (and (bvuge MV68 (_ bv0 2)) (bvult MV68 (_ bv3 2))))
(declare-fun MV68_0 () (_ Bool))
(declare-fun MV68_1 () (_ Bool))
(assert benchmark_2)
(assert (or (not V10) (not V18)))
(assert (or V14 V18))
(assert (or (not V1) (not V17)))
(assert (or V9 V16))
(assert (or V2 V5))
(assert (or (not V4) (not V12)))
(assert (or V5 (not V13)))
(assert (or (not V16) (not V17)))
(assert (or V2 (not V15)))
(assert (or V11 V12))
(assert (or (not (= MV6 (_ bv3 2))) (not V10)))
(assert (or (not V11) V15))
(assert (or (not (= MV6 (_ bv3 2))) V8))
(assert (or (not V1) V9))
(assert (or (not V2) (not V4)))
(assert (or V15 (not V17)))
(assert (or (not V5) V7))
(assert (or (not V3) V18))
(assert (or (not V12) V18))
(assert (or (not V2) (or (not V13) (not V14))))
(assert (or (not V0) (or (not V3) (not V14))))
(assert (or (not V0) (or V7 (not V11))))
(assert (= MV6_0 (= (bvand MV6 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV6_1 (= (bvand MV6 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV28_0 (= (bvand MV28 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV28_1 (= (bvand MV28 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV28_2 (= (bvand MV28 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV29_0 (= (bvand MV29 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV29_1 (= (bvand MV29 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV29_2 (= (bvand MV29 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV44_0 (= (bvand MV44 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV44_1 (= (bvand MV44 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV50_0 (= (bvand MV50 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV50_1 (= (bvand MV50 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV51_0 (= (bvand MV51 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV51_1 (= (bvand MV51 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV62_0 (= (bvand MV62 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV62_1 (= (bvand MV62 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV68_0 (= (bvand MV68 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV68_1 (= (bvand MV68 (_ bv2 2)  ) (_ bv2 2))))

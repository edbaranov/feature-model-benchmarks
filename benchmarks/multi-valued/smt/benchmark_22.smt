;; benchmark_22=2 V0=2 V1=2 V2=2 V3=2 V4=2 V5=2 V6=2 V7=2 V8=2 V9=2 V10=2 V11=2 V12=2 V13=2 V14=2 V15=2 V16=2 V17=2 V18=2 V19=2 V20=2 V21=2 V22=2 V23=2 V24=2 V25=2 V26=2 V27=2 V28=2 V29=2 V30=2 V31=2 V34=2 V35=2 V37=2 V38=2 V39=2 V40=2 V42=2 V43=2 V44=2 V45=2 V46=2 V47=2 V48=2 V49=2 V51=2 V52=2 V53=2 V54=2 V55=2 V57=2 V58=2 V59=2 V60=2 V61=2 V62=2 V63=2 V64=2 V65=2 V67=2 V68=2 V69=2 V70=2 V71=2 V72=2 V73=2 V74=2 V75=2 V76=2 V77=2 V78=2 MV32=3 MV33=6 MV36=3 MV41=4 MV50=3 MV56=6 MV66=3
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_22 () Bool)
(declare-fun V0 () Bool)
(declare-fun V1 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V4 () Bool)
(declare-fun V5 () Bool)
(declare-fun V6 () Bool)
(declare-fun V7 () Bool)
(declare-fun V8 () Bool)
(declare-fun V9 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V12 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V15 () Bool)
(declare-fun V16 () Bool)
(declare-fun V17 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V20 () Bool)
(declare-fun V21 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V26 () Bool)
(declare-fun V27 () Bool)
(declare-fun V28 () Bool)
(declare-fun V29 () Bool)
(declare-fun V30 () Bool)
(declare-fun V31 () Bool)
(declare-fun V34 () Bool)
(declare-fun V35 () Bool)
(declare-fun V37 () Bool)
(declare-fun V38 () Bool)
(declare-fun V39 () Bool)
(declare-fun V40 () Bool)
(declare-fun V42 () Bool)
(declare-fun V43 () Bool)
(declare-fun V44 () Bool)
(declare-fun V45 () Bool)
(declare-fun V46 () Bool)
(declare-fun V47 () Bool)
(declare-fun V48 () Bool)
(declare-fun V49 () Bool)
(declare-fun V51 () Bool)
(declare-fun V52 () Bool)
(declare-fun V53 () Bool)
(declare-fun V54 () Bool)
(declare-fun V55 () Bool)
(declare-fun V57 () Bool)
(declare-fun V58 () Bool)
(declare-fun V59 () Bool)
(declare-fun V60 () Bool)
(declare-fun V61 () Bool)
(declare-fun V62 () Bool)
(declare-fun V63 () Bool)
(declare-fun V64 () Bool)
(declare-fun V65 () Bool)
(declare-fun V67 () Bool)
(declare-fun V68 () Bool)
(declare-fun V69 () Bool)
(declare-fun V70 () Bool)
(declare-fun V71 () Bool)
(declare-fun V72 () Bool)
(declare-fun V73 () Bool)
(declare-fun V74 () Bool)
(declare-fun V75 () Bool)
(declare-fun V76 () Bool)
(declare-fun V77 () Bool)
(declare-fun V78 () Bool)
(declare-fun MV32 () (_ BitVec 2))
(assert (and (bvuge MV32 (_ bv0 2)) (bvult MV32 (_ bv3 2))))
(declare-fun MV32_0 () (_ Bool))
(declare-fun MV32_1 () (_ Bool))
(declare-fun MV33 () (_ BitVec 3))
(assert (and (bvuge MV33 (_ bv0 3)) (bvult MV33 (_ bv6 3))))
(declare-fun MV33_0 () (_ Bool))
(declare-fun MV33_1 () (_ Bool))
(declare-fun MV33_2 () (_ Bool))
(declare-fun MV36 () (_ BitVec 2))
(assert (and (bvuge MV36 (_ bv0 2)) (bvult MV36 (_ bv3 2))))
(declare-fun MV36_0 () (_ Bool))
(declare-fun MV36_1 () (_ Bool))
(declare-fun MV41 () (_ BitVec 2))
(declare-fun MV41_0 () (_ Bool))
(declare-fun MV41_1 () (_ Bool))
(declare-fun MV50 () (_ BitVec 2))
(assert (and (bvuge MV50 (_ bv0 2)) (bvult MV50 (_ bv3 2))))
(declare-fun MV50_0 () (_ Bool))
(declare-fun MV50_1 () (_ Bool))
(declare-fun MV56 () (_ BitVec 3))
(assert (and (bvuge MV56 (_ bv0 3)) (bvult MV56 (_ bv6 3))))
(declare-fun MV56_0 () (_ Bool))
(declare-fun MV56_1 () (_ Bool))
(declare-fun MV56_2 () (_ Bool))
(declare-fun MV66 () (_ BitVec 2))
(assert (and (bvuge MV66 (_ bv0 2)) (bvult MV66 (_ bv3 2))))
(declare-fun MV66_0 () (_ Bool))
(declare-fun MV66_1 () (_ Bool))
(assert benchmark_22)
(assert (or (not V14) V15))
(assert (or V9 V11))
(assert (or (not V4) (not V6)))
(assert (or V8 (not V13)))
(assert (or (not V3) V12))
(assert (or (not V4) V15))
(assert (or V9 (not V15)))
(assert (or (not V2) V15))
(assert (or (not V14) (not V15)))
(assert (or V1 V12))
(assert (or V1 (not V10)))
(assert (or (not V0) V15))
(assert (or (not V13) (not V14)))
(assert (or (not V5) (not V14)))
(assert (or V11 (not V12)))
(assert (or V1 V3))
(assert (or (not V9) (not V11)))
(assert (or (not V2) V10))
(assert (or V13 V15))
(assert (or V14 (not V15)))
(assert (or V2 (or V13 V14)))
(assert (or V1 (or (not V7) V12)))
(assert (= MV32_0 (= (bvand MV32 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV32_1 (= (bvand MV32 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV33_0 (= (bvand MV33 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV33_1 (= (bvand MV33 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV33_2 (= (bvand MV33 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV36_0 (= (bvand MV36 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV36_1 (= (bvand MV36 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV41_0 (= (bvand MV41 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV41_1 (= (bvand MV41 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV50_0 (= (bvand MV50 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV50_1 (= (bvand MV50 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV56_0 (= (bvand MV56 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV56_1 (= (bvand MV56 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV56_2 (= (bvand MV56 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV66_0 (= (bvand MV66 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV66_1 (= (bvand MV66 (_ bv2 2)  ) (_ bv2 2))))

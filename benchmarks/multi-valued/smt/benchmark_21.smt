;; benchmark_21=2 V0=2 V2=2 V3=2 V4=2 V5=2 V6=2 V7=2 V8=2 V9=2 V10=2 V11=2 V12=2 V13=2 V14=2 V15=2 V16=2 V17=2 V18=2 V19=2 V20=2 V21=2 V22=2 V23=2 V24=2 V25=2 V26=2 V27=2 V28=2 V29=2 V30=2 V32=2 V33=2 V34=2 V35=2 V36=2 V37=2 V38=2 V39=2 V41=2 V43=2 V45=2 V46=2 V47=2 V49=2 V50=2 V51=2 V53=2 V54=2 V56=2 V57=2 V58=2 V59=2 V60=2 V61=2 V62=2 V63=2 V64=2 V65=2 V66=2 V67=2 V68=2 V69=2 V71=2 V72=2 V73=2 V74=2 V75=2 V76=2 V77=2 V78=2 V79=2 V80=2 V81=2 V82=2 V83=2 V84=2 MV1=5 MV31=3 MV40=6 MV42=6 MV44=3 MV48=3 MV52=4 MV55=6 MV70=4
;; 
;; 
(set-logic QF_BV)
(declare-fun benchmark_21 () Bool)
(declare-fun V0 () Bool)
(declare-fun V2 () Bool)
(declare-fun V3 () Bool)
(declare-fun V4 () Bool)
(declare-fun V5 () Bool)
(declare-fun V6 () Bool)
(declare-fun V7 () Bool)
(declare-fun V8 () Bool)
(declare-fun V9 () Bool)
(declare-fun V10 () Bool)
(declare-fun V11 () Bool)
(declare-fun V12 () Bool)
(declare-fun V13 () Bool)
(declare-fun V14 () Bool)
(declare-fun V15 () Bool)
(declare-fun V16 () Bool)
(declare-fun V17 () Bool)
(declare-fun V18 () Bool)
(declare-fun V19 () Bool)
(declare-fun V20 () Bool)
(declare-fun V21 () Bool)
(declare-fun V22 () Bool)
(declare-fun V23 () Bool)
(declare-fun V24 () Bool)
(declare-fun V25 () Bool)
(declare-fun V26 () Bool)
(declare-fun V27 () Bool)
(declare-fun V28 () Bool)
(declare-fun V29 () Bool)
(declare-fun V30 () Bool)
(declare-fun V32 () Bool)
(declare-fun V33 () Bool)
(declare-fun V34 () Bool)
(declare-fun V35 () Bool)
(declare-fun V36 () Bool)
(declare-fun V37 () Bool)
(declare-fun V38 () Bool)
(declare-fun V39 () Bool)
(declare-fun V41 () Bool)
(declare-fun V43 () Bool)
(declare-fun V45 () Bool)
(declare-fun V46 () Bool)
(declare-fun V47 () Bool)
(declare-fun V49 () Bool)
(declare-fun V50 () Bool)
(declare-fun V51 () Bool)
(declare-fun V53 () Bool)
(declare-fun V54 () Bool)
(declare-fun V56 () Bool)
(declare-fun V57 () Bool)
(declare-fun V58 () Bool)
(declare-fun V59 () Bool)
(declare-fun V60 () Bool)
(declare-fun V61 () Bool)
(declare-fun V62 () Bool)
(declare-fun V63 () Bool)
(declare-fun V64 () Bool)
(declare-fun V65 () Bool)
(declare-fun V66 () Bool)
(declare-fun V67 () Bool)
(declare-fun V68 () Bool)
(declare-fun V69 () Bool)
(declare-fun V71 () Bool)
(declare-fun V72 () Bool)
(declare-fun V73 () Bool)
(declare-fun V74 () Bool)
(declare-fun V75 () Bool)
(declare-fun V76 () Bool)
(declare-fun V77 () Bool)
(declare-fun V78 () Bool)
(declare-fun V79 () Bool)
(declare-fun V80 () Bool)
(declare-fun V81 () Bool)
(declare-fun V82 () Bool)
(declare-fun V83 () Bool)
(declare-fun V84 () Bool)
(declare-fun MV1 () (_ BitVec 3))
(assert (and (bvuge MV1 (_ bv0 3)) (bvult MV1 (_ bv5 3))))
(declare-fun MV1_0 () (_ Bool))
(declare-fun MV1_1 () (_ Bool))
(declare-fun MV1_2 () (_ Bool))
(declare-fun MV31 () (_ BitVec 2))
(assert (and (bvuge MV31 (_ bv0 2)) (bvult MV31 (_ bv3 2))))
(declare-fun MV31_0 () (_ Bool))
(declare-fun MV31_1 () (_ Bool))
(declare-fun MV40 () (_ BitVec 3))
(assert (and (bvuge MV40 (_ bv0 3)) (bvult MV40 (_ bv6 3))))
(declare-fun MV40_0 () (_ Bool))
(declare-fun MV40_1 () (_ Bool))
(declare-fun MV40_2 () (_ Bool))
(declare-fun MV42 () (_ BitVec 3))
(assert (and (bvuge MV42 (_ bv0 3)) (bvult MV42 (_ bv6 3))))
(declare-fun MV42_0 () (_ Bool))
(declare-fun MV42_1 () (_ Bool))
(declare-fun MV42_2 () (_ Bool))
(declare-fun MV44 () (_ BitVec 2))
(assert (and (bvuge MV44 (_ bv0 2)) (bvult MV44 (_ bv3 2))))
(declare-fun MV44_0 () (_ Bool))
(declare-fun MV44_1 () (_ Bool))
(declare-fun MV48 () (_ BitVec 2))
(assert (and (bvuge MV48 (_ bv0 2)) (bvult MV48 (_ bv3 2))))
(declare-fun MV48_0 () (_ Bool))
(declare-fun MV48_1 () (_ Bool))
(declare-fun MV52 () (_ BitVec 2))
(declare-fun MV52_0 () (_ Bool))
(declare-fun MV52_1 () (_ Bool))
(declare-fun MV55 () (_ BitVec 3))
(assert (and (bvuge MV55 (_ bv0 3)) (bvult MV55 (_ bv6 3))))
(declare-fun MV55_0 () (_ Bool))
(declare-fun MV55_1 () (_ Bool))
(declare-fun MV55_2 () (_ Bool))
(declare-fun MV70 () (_ BitVec 2))
(declare-fun MV70_0 () (_ Bool))
(declare-fun MV70_1 () (_ Bool))
(assert benchmark_21)
(assert (or (not V8) (not V12)))
(assert (or V4 V12))
(assert (or (not V7) (not V16)))
(assert (or (not V13) V14))
(assert (or (not V4) (not V13)))
(assert (or V0 V15))
(assert (or (not V10) (not V13)))
(assert (or (not (= MV1 (_ bv1 3))) (not V16)))
(assert (or (not (= MV1 (_ bv3 3))) (not V6)))
(assert (or V10 V15))
(assert (or V9 V12))
(assert (or (not (= MV1 (_ bv1 3))) V16))
(assert (or (not V8) V13))
(assert (or (not V15) (not V16)))
(assert (or (not V13) (not V16)))
(assert (or (not V5) (not V8)))
(assert (or (not (= MV1 (_ bv1 3))) (not V13)))
(assert (or V7 (not V9)))
(assert (or (not V4) V13))
(assert (or (not V14) (not V15)))
(assert (or V11 (not V16)))
(assert (or V10 (not V15)))
(assert (or V13 (not V16)))
(assert (or (not V2) (not V7)))
(assert (or (not (= MV1 (_ bv0 3))) (not V15)))
(assert (or (not (= MV1 (_ bv3 3))) V16))
(assert (or V2 (not V16)))
(assert (or (not V5) (not V6)))
(assert (or V0 V10))
(assert (or (not V0) (not V13)))
(assert (or V6 (not V11)))
(assert (or V0 (not V10)))
(assert (or V9 V12))
(assert (or V11 (not V14)))
(assert (or (not V3) V16))
(assert (or (not V2) V5))
(assert (or V0 (not V14)))
(assert (or (not V11) (not V15)))
(assert (or V10 V12))
(assert (or (not (= MV1 (_ bv1 3))) (not V3)))
(assert (or (not V10) (or (not V11) V14)))
(assert (or V5 (or (not V9) V10)))
(assert (or (not (= MV1 (_ bv4 3))) (or V5 (not V10))))
(assert (or (not V2) (or V9 (not V10))))
(assert (or V5 (or (not V12) V16)))
(assert (or V4 (or (not V5) (not V14))))
(assert (= MV1_0 (= (bvand MV1 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV1_1 (= (bvand MV1 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV1_2 (= (bvand MV1 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV31_0 (= (bvand MV31 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV31_1 (= (bvand MV31 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV40_0 (= (bvand MV40 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV40_1 (= (bvand MV40 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV40_2 (= (bvand MV40 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV42_0 (= (bvand MV42 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV42_1 (= (bvand MV42 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV42_2 (= (bvand MV42 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV44_0 (= (bvand MV44 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV44_1 (= (bvand MV44 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV48_0 (= (bvand MV48 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV48_1 (= (bvand MV48 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV52_0 (= (bvand MV52 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV52_1 (= (bvand MV52 (_ bv2 2)  ) (_ bv2 2))))
(assert (= MV55_0 (= (bvand MV55 (_ bv1 3)  ) (_ bv1 3))))
(assert (= MV55_1 (= (bvand MV55 (_ bv2 3)  ) (_ bv2 3))))
(assert (= MV55_2 (= (bvand MV55 (_ bv4 3)  ) (_ bv4 3))))
(assert (= MV70_0 (= (bvand MV70 (_ bv1 2)  ) (_ bv1 2))))
(assert (= MV70_1 (= (bvand MV70 (_ bv2 2)  ) (_ bv2 2))))
